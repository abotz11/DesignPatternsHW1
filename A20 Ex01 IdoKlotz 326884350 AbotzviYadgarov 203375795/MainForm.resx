<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DBSGpi2ivwEEhfPACAIBIQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DBSGpi2ivwEEhfPACAIBIQAAAABJRU5ErkJggg==
</value>
  </data>
</root>